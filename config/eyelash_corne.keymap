#define ZMK_POINTING_DEFAULT_MOVE_VAL 500  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        ht0: ht0 {
            compatible = "zmk,behavior-hold-tap";
            label = "HT0";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        td1: td1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD1";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT>, <&kp LANG_HANGEUL>;
        };

        scroll_encoder1: scroll_encoder1 {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "SCROLL_ENCODER1";
            #sensor-binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        home_row_mod_left: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MOD_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <7 8 9 10 11 12 22 23 24 25 26 27 36 37 38 39 40 41>;
            hold-trigger-on-release;
            flavor = "balanced";
        };

        home_row_mod_right: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MOD_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 28 29 30 31 32 33>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB         &kp Q                          &kp W                          &kp E                              &kp R                            &kp T                                &kp UP                &kp Y        &kp U                              &kp I                                &kp O                            &kp P                               &kp BSPC
&kp LEFT_SHIFT  &home_row_mod_left LEFT_GUI A  &home_row_mod_left LEFT_ALT S  &home_row_mod_left LEFT_CONTROL D  &home_row_mod_left LEFT_SHIFT F  &kp G                      &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &home_row_mod_right RIGHT_SHIFT J  &home_row_mod_right RIGHT_CONTROL K  &home_row_mod_right RIGHT_ALT L  &home_row_mod_right RIGHT_GUI SEMI  &ht0 RIGHT_SHIFT SINGLE_QUOTE
&kp LCTRL       &kp Z                          &kp X                          &kp C                              &kp V                            &kp B        &kp C_MUTE              &kp DOWN              &kp N        &kp M                              &kp COMMA                            &kp DOT                          &kp FSLH                            &kp RETURN
                                                                              &kp LEFT_ALT                       &lt 1 LANG_HANGEUL               &lt 3 SPACE                                                &lt 3 SPACE  &lt 2 LANG_HANGEUL                 &kp RIGHT_GUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1  &kp N2    &kp N3    &kp N4     &kp N5                        &trans          &kp N6      &kp N7    &kp N8    &kp N9     &kp N0    &kp BSPC
&trans  &trans  &trans    &kp UP    &trans     &trans                &trans  &trans  &trans  &trans      &trans    &kp UP    &trans     &kp HOME  &kp PG_UP
&trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &kp C_MUTE            &trans          &trans      &kp LEFT  &kp DOWN  &kp RIGHT  &kp END   &kp PG_DN
                          &trans    &trans     &trans                                        &kp INSERT  &kp DEL   &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL         &kp AT          &kp HASH  &kp DLLR  &kp PRCNT                          &trans          &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &trans           &trans          &trans    &trans    &trans                     &trans  &trans  &trans  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &none     &none     &rgb_ug RGB_EFF  &trans            &trans          &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                         &trans    &trans    &kp SPACE                                          &kp SPACE  &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&kp ESCAPE  &kp F1          &kp F2        &kp F3        &kp F4        &kp F5                                        &mmv MOVE_UP                     &kp F6  &kp F7           &kp F8          &kp F9           &kp F10         &kp F11
&trans      &msc SCRL_UP    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                  &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans  &mkp LCLK        &mkp MCLK       &mkp RCLK        &msc SCRL_UP    &kp F12
&trans      &msc SCRL_DOWN  &trans        &out OUT_USB  &out OUT_BLE  &bt BT_CLR_ALL  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans  &kp PRINTSCREEN  &kp SCROLLLOCK  &kp PAUSE_BREAK  &msc SCRL_DOWN  &trans
                                          &trans        &trans        &trans                                                                         &trans  &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };
    };
};
